;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 21/10/2021 20:48:56
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF6B  	GOTO        214
_Interrupt:
;pratica01.c,5 :: 		void Interrupt()
;pratica01.c,7 :: 		if(TMR0IF_bit == 1)
0x0008	0xA4F2      	BTFSS       TMR0IF_bit, BitPos(TMR0IF_bit+0) 
0x000A	0xD008      	BRA         L_Interrupt0
;pratica01.c,9 :: 		TMR0IF_bit = 0;
0x000C	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;pratica01.c,10 :: 		teste = 1;
0x000E	0x8015      	BSF         _teste, BitPos(_teste+0) 
;pratica01.c,11 :: 		T0CON = 0b00000011;
0x0010	0x0E03      	MOVLW       3
0x0012	0x6ED5      	MOVWF       T0CON 
;pratica01.c,12 :: 		TMR0L = 0xEE;
0x0014	0x0EEE      	MOVLW       238
0x0016	0x6ED6      	MOVWF       TMR0L 
;pratica01.c,13 :: 		TMR0H = 0x85;
0x0018	0x0E85      	MOVLW       133
0x001A	0x6ED7      	MOVWF       TMR0H 
;pratica01.c,14 :: 		}
L_Interrupt0:
;pratica01.c,15 :: 		}
L_end_Interrupt:
L__Interrupt46:
0x001C	0x0011      	RETFIE      1
; end of _Interrupt
_display:
;pratica01.c,18 :: 		void display(int num)
;pratica01.c,20 :: 		switch(num)
0x001E	0xD01E      	BRA         L_display1
;pratica01.c,22 :: 		case 0:
L_display3:
;pratica01.c,23 :: 		latd = 0b11111100;
0x0020	0x0EFC      	MOVLW       252
0x0022	0x6E8C      	MOVWF       LATD 
;pratica01.c,24 :: 		break;
0x0024	0xD057      	BRA         L_display2
;pratica01.c,26 :: 		case 1:
L_display4:
;pratica01.c,27 :: 		latd = 0b01100000;
0x0026	0x0E60      	MOVLW       96
0x0028	0x6E8C      	MOVWF       LATD 
;pratica01.c,28 :: 		break;
0x002A	0xD054      	BRA         L_display2
;pratica01.c,30 :: 		case 2:
L_display5:
;pratica01.c,31 :: 		latd = 0b11011010;
0x002C	0x0EDA      	MOVLW       218
0x002E	0x6E8C      	MOVWF       LATD 
;pratica01.c,32 :: 		break;
0x0030	0xD051      	BRA         L_display2
;pratica01.c,34 :: 		case 3:
L_display6:
;pratica01.c,35 :: 		latd = 0b11110010;
0x0032	0x0EF2      	MOVLW       242
0x0034	0x6E8C      	MOVWF       LATD 
;pratica01.c,36 :: 		break;
0x0036	0xD04E      	BRA         L_display2
;pratica01.c,38 :: 		case 4:
L_display7:
;pratica01.c,39 :: 		latd = 0b01100110;
0x0038	0x0E66      	MOVLW       102
0x003A	0x6E8C      	MOVWF       LATD 
;pratica01.c,40 :: 		break;
0x003C	0xD04B      	BRA         L_display2
;pratica01.c,42 :: 		case 5:
L_display8:
;pratica01.c,43 :: 		latd = 0b10110110;
0x003E	0x0EB6      	MOVLW       182
0x0040	0x6E8C      	MOVWF       LATD 
;pratica01.c,44 :: 		break;
0x0042	0xD048      	BRA         L_display2
;pratica01.c,46 :: 		case 6:
L_display9:
;pratica01.c,47 :: 		latd = 0b10111110;
0x0044	0x0EBE      	MOVLW       190
0x0046	0x6E8C      	MOVWF       LATD 
;pratica01.c,48 :: 		break;
0x0048	0xD045      	BRA         L_display2
;pratica01.c,50 :: 		case 7:
L_display10:
;pratica01.c,51 :: 		latd = 0b11100000;
0x004A	0x0EE0      	MOVLW       224
0x004C	0x6E8C      	MOVWF       LATD 
;pratica01.c,52 :: 		break;
0x004E	0xD042      	BRA         L_display2
;pratica01.c,54 :: 		case 8:
L_display11:
;pratica01.c,55 :: 		latd = 0b11111110;
0x0050	0x0EFE      	MOVLW       254
0x0052	0x6E8C      	MOVWF       LATD 
;pratica01.c,56 :: 		break;
0x0054	0xD03F      	BRA         L_display2
;pratica01.c,58 :: 		case 9:
L_display12:
;pratica01.c,59 :: 		latd = 0b11110110;
0x0056	0x0EF6      	MOVLW       246
0x0058	0x6E8C      	MOVWF       LATD 
;pratica01.c,60 :: 		break;
0x005A	0xD03C      	BRA         L_display2
;pratica01.c,62 :: 		}
L_display1:
0x005C	0x0E00      	MOVLW       0
0x005E	0x181B      	XORWF       FARG_display_num+1, 0 
0x0060	0xE102      	BNZ         L__display48
0x0062	0x0E00      	MOVLW       0
0x0064	0x181A      	XORWF       FARG_display_num, 0 
L__display48:
0x0066	0xE0DC      	BZ          L_display3
0x0068	0x0E00      	MOVLW       0
0x006A	0x181B      	XORWF       FARG_display_num+1, 0 
0x006C	0xE102      	BNZ         L__display49
0x006E	0x0E01      	MOVLW       1
0x0070	0x181A      	XORWF       FARG_display_num, 0 
L__display49:
0x0072	0xE0D9      	BZ          L_display4
0x0074	0x0E00      	MOVLW       0
0x0076	0x181B      	XORWF       FARG_display_num+1, 0 
0x0078	0xE102      	BNZ         L__display50
0x007A	0x0E02      	MOVLW       2
0x007C	0x181A      	XORWF       FARG_display_num, 0 
L__display50:
0x007E	0xE0D6      	BZ          L_display5
0x0080	0x0E00      	MOVLW       0
0x0082	0x181B      	XORWF       FARG_display_num+1, 0 
0x0084	0xE102      	BNZ         L__display51
0x0086	0x0E03      	MOVLW       3
0x0088	0x181A      	XORWF       FARG_display_num, 0 
L__display51:
0x008A	0xE0D3      	BZ          L_display6
0x008C	0x0E00      	MOVLW       0
0x008E	0x181B      	XORWF       FARG_display_num+1, 0 
0x0090	0xE102      	BNZ         L__display52
0x0092	0x0E04      	MOVLW       4
0x0094	0x181A      	XORWF       FARG_display_num, 0 
L__display52:
0x0096	0xE0D0      	BZ          L_display7
0x0098	0x0E00      	MOVLW       0
0x009A	0x181B      	XORWF       FARG_display_num+1, 0 
0x009C	0xE102      	BNZ         L__display53
0x009E	0x0E05      	MOVLW       5
0x00A0	0x181A      	XORWF       FARG_display_num, 0 
L__display53:
0x00A2	0xE0CD      	BZ          L_display8
0x00A4	0x0E00      	MOVLW       0
0x00A6	0x181B      	XORWF       FARG_display_num+1, 0 
0x00A8	0xE102      	BNZ         L__display54
0x00AA	0x0E06      	MOVLW       6
0x00AC	0x181A      	XORWF       FARG_display_num, 0 
L__display54:
0x00AE	0xE0CA      	BZ          L_display9
0x00B0	0x0E00      	MOVLW       0
0x00B2	0x181B      	XORWF       FARG_display_num+1, 0 
0x00B4	0xE102      	BNZ         L__display55
0x00B6	0x0E07      	MOVLW       7
0x00B8	0x181A      	XORWF       FARG_display_num, 0 
L__display55:
0x00BA	0xE0C7      	BZ          L_display10
0x00BC	0x0E00      	MOVLW       0
0x00BE	0x181B      	XORWF       FARG_display_num+1, 0 
0x00C0	0xE102      	BNZ         L__display56
0x00C2	0x0E08      	MOVLW       8
0x00C4	0x181A      	XORWF       FARG_display_num, 0 
L__display56:
0x00C6	0xE0C4      	BZ          L_display11
0x00C8	0x0E00      	MOVLW       0
0x00CA	0x181B      	XORWF       FARG_display_num+1, 0 
0x00CC	0xE102      	BNZ         L__display57
0x00CE	0x0E09      	MOVLW       9
0x00D0	0x181A      	XORWF       FARG_display_num, 0 
L__display57:
0x00D2	0xE0C1      	BZ          L_display12
L_display2:
;pratica01.c,63 :: 		}
L_end_display:
0x00D4	0x0012      	RETURN      0
; end of _display
_main:
;pratica01.c,65 :: 		void main(){
;pratica01.c,71 :: 		ADCON1 = 0b00001111;       //Todas portas são digitais
0x00D6	0x0E0F      	MOVLW       15
0x00D8	0x6EC1      	MOVWF       ADCON1 
;pratica01.c,72 :: 		INTCON = 0b11100000;        //Ativa interrupção globa e int do Timer 0
0x00DA	0x0EE0      	MOVLW       224
0x00DC	0x6EF2      	MOVWF       INTCON 
;pratica01.c,73 :: 		trisb  = 0b00000011;       //Config. RB0 e RB1 como input
0x00DE	0x0E03      	MOVLW       3
0x00E0	0x6E93      	MOVWF       TRISB 
;pratica01.c,74 :: 		trisd  = 0b00000000;       //Config. todas D ports como output
0x00E2	0x6A95      	CLRF        TRISD 
;pratica01.c,75 :: 		latd  = 0b00000000;       //Inicia display apagado
0x00E4	0x6A8C      	CLRF        LATD 
;pratica01.c,85 :: 		T0CON = 0b00000011;
0x00E6	0x0E03      	MOVLW       3
0x00E8	0x6ED5      	MOVWF       T0CON 
;pratica01.c,86 :: 		TMR0L = 0xEE;
0x00EA	0x0EEE      	MOVLW       238
0x00EC	0x6ED6      	MOVWF       TMR0L 
;pratica01.c,87 :: 		TMR0H = 0x85;
0x00EE	0x0E85      	MOVLW       133
0x00F0	0x6ED7      	MOVWF       TMR0H 
;pratica01.c,98 :: 		while(1)
L_main13:
;pratica01.c,100 :: 		buf_rb1 = RB1_bit;
0x00F2	0xB281      	BTFSC       RB1_bit, BitPos(RB1_bit+0) 
0x00F4	0xD002      	BRA         L__main59
0x00F6	0x9415      	BCF         main_buf_rb1_L0, BitPos(main_buf_rb1_L0+0) 
0x00F8	0xD001      	BRA         L__main60
L__main59:
0x00FA	0x8415      	BSF         main_buf_rb1_L0, BitPos(main_buf_rb1_L0+0) 
L__main60:
;pratica01.c,101 :: 		buf_rb0 = RB0_bit;
0x00FC	0xB081      	BTFSC       RB0_bit, BitPos(RB0_bit+0) 
0x00FE	0xD002      	BRA         L__main61
0x0100	0x9215      	BCF         main_buf_rb0_L0, BitPos(main_buf_rb0_L0+0) 
0x0102	0xD001      	BRA         L__main62
L__main61:
0x0104	0x8215      	BSF         main_buf_rb0_L0, BitPos(main_buf_rb0_L0+0) 
L__main62:
;pratica01.c,103 :: 		while(buf_rb1 == 0)
L_main15:
0x0106	0xB415      	BTFSC       main_buf_rb1_L0, BitPos(main_buf_rb1_L0+0) 
0x0108	0xD033      	BRA         L_main16
;pratica01.c,105 :: 		for(i=0;i<10;i++)
0x010A	0x6A16      	CLRF        main_i_L0 
0x010C	0x6A17      	CLRF        main_i_L0+1 
0x010E	0x6A18      	CLRF        main_i_L0+2 
0x0110	0x6A19      	CLRF        main_i_L0+3 
L_main17:
0x0112	0x0E80      	MOVLW       128
0x0114	0x1819      	XORWF       main_i_L0+3, 0 
0x0116	0x6E00      	MOVWF       R0 
0x0118	0x0E80      	MOVLW       128
0x011A	0x5C00      	SUBWF       R0, 0 
0x011C	0xE108      	BNZ         L__main63
0x011E	0x0E00      	MOVLW       0
0x0120	0x5C18      	SUBWF       main_i_L0+2, 0 
0x0122	0xE105      	BNZ         L__main63
0x0124	0x0E00      	MOVLW       0
0x0126	0x5C17      	SUBWF       main_i_L0+1, 0 
0x0128	0xE102      	BNZ         L__main63
0x012A	0x0E0A      	MOVLW       10
0x012C	0x5C16      	SUBWF       main_i_L0, 0 
L__main63:
0x012E	0xE21F      	BC          L_main18
;pratica01.c,107 :: 		if((buf_rb0 == 1) && (RB0_bit == 0))
0x0130	0xA215      	BTFSS       main_buf_rb0_L0, BitPos(main_buf_rb0_L0+0) 
0x0132	0xD005      	BRA         L_main22
0x0134	0xB081      	BTFSC       RB0_bit, BitPos(RB0_bit+0) 
0x0136	0xD003      	BRA         L_main22
L__main44:
;pratica01.c,109 :: 		buf_rb1 = 1;
0x0138	0x8415      	BSF         main_buf_rb1_L0, BitPos(main_buf_rb1_L0+0) 
;pratica01.c,110 :: 		buf_rb0 = 0;
0x013A	0x9215      	BCF         main_buf_rb0_L0, BitPos(main_buf_rb0_L0+0) 
;pratica01.c,111 :: 		break;
0x013C	0xD018      	BRA         L_main18
;pratica01.c,112 :: 		}
L_main22:
;pratica01.c,113 :: 		display(i);
0x013E	0xF01AC016  	MOVFF       main_i_L0, FARG_display_num
0x0142	0xF01BC017  	MOVFF       main_i_L0+1, FARG_display_num+1
0x0146	0xDF6B      	RCALL       _display
;pratica01.c,114 :: 		TMR0ON_bit = 1;
0x0148	0x8ED5      	BSF         TMR0ON_bit, BitPos(TMR0ON_bit+0) 
;pratica01.c,115 :: 		teste  = 0;
0x014A	0x9015      	BCF         _teste, BitPos(_teste+0) 
;pratica01.c,116 :: 		while(teste == 0)
L_main23:
0x014C	0xB015      	BTFSC       _teste, BitPos(_teste+0) 
0x014E	0xD008      	BRA         L_main24
;pratica01.c,118 :: 		if((buf_rb0 == 1) && (RB0_bit == 0))
0x0150	0xA215      	BTFSS       main_buf_rb0_L0, BitPos(main_buf_rb0_L0+0) 
0x0152	0xD005      	BRA         L_main27
0x0154	0xB081      	BTFSC       RB0_bit, BitPos(RB0_bit+0) 
0x0156	0xD003      	BRA         L_main27
L__main43:
;pratica01.c,120 :: 		buf_rb1 = 1;
0x0158	0x8415      	BSF         main_buf_rb1_L0, BitPos(main_buf_rb1_L0+0) 
;pratica01.c,121 :: 		buf_rb0 = 0;
0x015A	0x9215      	BCF         main_buf_rb0_L0, BitPos(main_buf_rb0_L0+0) 
;pratica01.c,122 :: 		break;
0x015C	0xD001      	BRA         L_main24
;pratica01.c,123 :: 		}
L_main27:
;pratica01.c,124 :: 		}
0x015E	0xD7F6      	BRA         L_main23
L_main24:
;pratica01.c,105 :: 		for(i=0;i<10;i++)
0x0160	0x0E01      	MOVLW       1
0x0162	0x2616      	ADDWF       main_i_L0, 1 
0x0164	0x0E00      	MOVLW       0
0x0166	0x2217      	ADDWFC      main_i_L0+1, 1 
0x0168	0x2218      	ADDWFC      main_i_L0+2, 1 
0x016A	0x2219      	ADDWFC      main_i_L0+3, 1 
;pratica01.c,125 :: 		}
0x016C	0xD7D2      	BRA         L_main17
L_main18:
;pratica01.c,126 :: 		}
0x016E	0xD7CB      	BRA         L_main15
L_main16:
;pratica01.c,128 :: 		while(buf_rb0 == 0)
L_main28:
0x0170	0xB215      	BTFSC       main_buf_rb0_L0, BitPos(main_buf_rb0_L0+0) 
0x0172	0xD035      	BRA         L_main29
;pratica01.c,130 :: 		for(i=0;i<10;i++)
0x0174	0x6A16      	CLRF        main_i_L0 
0x0176	0x6A17      	CLRF        main_i_L0+1 
0x0178	0x6A18      	CLRF        main_i_L0+2 
0x017A	0x6A19      	CLRF        main_i_L0+3 
L_main30:
0x017C	0x0E80      	MOVLW       128
0x017E	0x1819      	XORWF       main_i_L0+3, 0 
0x0180	0x6E00      	MOVWF       R0 
0x0182	0x0E80      	MOVLW       128
0x0184	0x5C00      	SUBWF       R0, 0 
0x0186	0xE108      	BNZ         L__main64
0x0188	0x0E00      	MOVLW       0
0x018A	0x5C18      	SUBWF       main_i_L0+2, 0 
0x018C	0xE105      	BNZ         L__main64
0x018E	0x0E00      	MOVLW       0
0x0190	0x5C17      	SUBWF       main_i_L0+1, 0 
0x0192	0xE102      	BNZ         L__main64
0x0194	0x0E0A      	MOVLW       10
0x0196	0x5C16      	SUBWF       main_i_L0, 0 
L__main64:
0x0198	0xE221      	BC          L_main31
;pratica01.c,132 :: 		if((buf_rb1 == 1) && (RB1_bit == 0))
0x019A	0xA415      	BTFSS       main_buf_rb1_L0, BitPos(main_buf_rb1_L0+0) 
0x019C	0xD005      	BRA         L_main35
0x019E	0xB281      	BTFSC       RB1_bit, BitPos(RB1_bit+0) 
0x01A0	0xD003      	BRA         L_main35
L__main42:
;pratica01.c,134 :: 		buf_rb1 = 0;
0x01A2	0x9415      	BCF         main_buf_rb1_L0, BitPos(main_buf_rb1_L0+0) 
;pratica01.c,135 :: 		buf_rb0 = 1;
0x01A4	0x8215      	BSF         main_buf_rb0_L0, BitPos(main_buf_rb0_L0+0) 
;pratica01.c,136 :: 		break;
0x01A6	0xD01A      	BRA         L_main31
;pratica01.c,137 :: 		}
L_main35:
;pratica01.c,138 :: 		display(i);
0x01A8	0xF01AC016  	MOVFF       main_i_L0, FARG_display_num
0x01AC	0xF01BC017  	MOVFF       main_i_L0+1, FARG_display_num+1
0x01B0	0xDF36      	RCALL       _display
;pratica01.c,139 :: 		T0CON = 0b00000101;
0x01B2	0x0E05      	MOVLW       5
0x01B4	0x6ED5      	MOVWF       T0CON 
;pratica01.c,140 :: 		TMR0ON_bit = 1;
0x01B6	0x8ED5      	BSF         TMR0ON_bit, BitPos(TMR0ON_bit+0) 
;pratica01.c,141 :: 		teste  = 0;
0x01B8	0x9015      	BCF         _teste, BitPos(_teste+0) 
;pratica01.c,142 :: 		while(teste == 0){
L_main36:
0x01BA	0xB015      	BTFSC       _teste, BitPos(_teste+0) 
0x01BC	0xD008      	BRA         L_main37
;pratica01.c,143 :: 		if((buf_rb1 == 1) && (RB1_bit == 0))
0x01BE	0xA415      	BTFSS       main_buf_rb1_L0, BitPos(main_buf_rb1_L0+0) 
0x01C0	0xD005      	BRA         L_main40
0x01C2	0xB281      	BTFSC       RB1_bit, BitPos(RB1_bit+0) 
0x01C4	0xD003      	BRA         L_main40
L__main41:
;pratica01.c,145 :: 		buf_rb1 = 0;
0x01C6	0x9415      	BCF         main_buf_rb1_L0, BitPos(main_buf_rb1_L0+0) 
;pratica01.c,146 :: 		buf_rb0 = 1;
0x01C8	0x8215      	BSF         main_buf_rb0_L0, BitPos(main_buf_rb0_L0+0) 
;pratica01.c,147 :: 		break;
0x01CA	0xD001      	BRA         L_main37
;pratica01.c,148 :: 		}
L_main40:
;pratica01.c,149 :: 		}
0x01CC	0xD7F6      	BRA         L_main36
L_main37:
;pratica01.c,130 :: 		for(i=0;i<10;i++)
0x01CE	0x0E01      	MOVLW       1
0x01D0	0x2616      	ADDWF       main_i_L0, 1 
0x01D2	0x0E00      	MOVLW       0
0x01D4	0x2217      	ADDWFC      main_i_L0+1, 1 
0x01D6	0x2218      	ADDWFC      main_i_L0+2, 1 
0x01D8	0x2219      	ADDWFC      main_i_L0+3, 1 
;pratica01.c,151 :: 		}
0x01DA	0xD7D0      	BRA         L_main30
L_main31:
;pratica01.c,152 :: 		}
0x01DC	0xD7C9      	BRA         L_main28
L_main29:
;pratica01.c,153 :: 		}
0x01DE	0xD789      	BRA         L_main13
;pratica01.c,155 :: 		}
L_end_main:
0x01E0	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [22]    _Interrupt
0x001E     [184]    _display
0x00D6     [268]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [0]    main_buf_rb0_L0
0x0015       [0]    _teste
0x0015       [0]    main_buf_rb1_L0
0x0016       [4]    main_i_L0
0x001A       [2]    FARG_display_num
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB1_bit
0x0F8C       [1]    LATD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF2       [0]    TMR0IF_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
